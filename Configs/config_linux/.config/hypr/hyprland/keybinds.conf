# ░█▀█░█░░░█▀█░█▀█░░░█▀▀░█░█░█▀█░█░█░█▀█
# ░█▀█░█░░░█▀█░█░█░░░█░░░█░█░█░█░█▀█░█▀█
# ░▀░▀░▀▀▀░▀░▀░▀░▀░░░▀▀▀░▀▀▀░▀░▀░▀░▀░▀░▀
# ======================================
# Full documentation: https://wiki.hypr.land/Configuring/Binds/


$mainMod = SUPER # Sets "Windows" key as main modifier

# Example binds, see https://wiki.hyprland.org/Configuring/Binds/ for more
bind = $mainMod, RETURN, exec, $TERMINAL
bind = $mainMod, Q, killactive
bind = $mainMod, E, exec, nautilus -w
bind = $mainMod, V, togglefloating
bind = $mainMod, SPACE, exec, $HOME/.config/rofi/launcher.sh
bind = $mainMod SHIFT, SPACE, exec, $HOME/.config/rofi/finder.sh
bind = $mainMod, Delete, exec, $HOME/.config/rofi/powermenu.sh
bind = $mainMod, J, togglesplit
bind = $mainMod, C, exec, hyprpicker -a
bind = $mainMod, F, fullscreen
bind = $mainMod SHIFT, Q, exec, hyprlock
bind = $mainMod, escape, exec, dunstctl close-all
bind = $mainMod SHIFT, escape, exec, dunstctl history-pop

# Move focus with mainMod + vim keybinds
bind = $mainMod, H, movefocus, l
bind = $mainMod, L, movefocus, r
bind = $mainMod, J, movefocus, u
bind = $mainMod, K, movefocus, d

# Switch workspaces with mainMod + [0-9]
bind = $mainMod, 1, workspace, 1
bind = $mainMod, 2, workspace, 2
bind = $mainMod, 3, workspace, 3
bind = $mainMod, 4, workspace, 4
bind = $mainMod, 5, workspace, 5
bind = $mainMod, 6, workspace, 6
bind = $mainMod, 7, workspace, 7
bind = $mainMod, 8, workspace, 8
bind = $mainMod, 9, workspace, 9
bind = $mainMod, 0, workspace, 10

# Move active window to a workspace with mainMod + SHIFT + [0-9]
bind = $mainMod SHIFT, 1, movetoworkspace, 1
bind = $mainMod SHIFT, 2, movetoworkspace, 2
bind = $mainMod SHIFT, 3, movetoworkspace, 3
bind = $mainMod SHIFT, 4, movetoworkspace, 4
bind = $mainMod SHIFT, 5, movetoworkspace, 5
bind = $mainMod SHIFT, 6, movetoworkspace, 6
bind = $mainMod SHIFT, 7, movetoworkspace, 7
bind = $mainMod SHIFT, 8, movetoworkspace, 8
bind = $mainMod SHIFT, 9, movetoworkspace, 9
bind = $mainMod SHIFT, 0, movetoworkspace, 10

# Example special workspace (scratchpad)
bind = $mainMod, S, togglespecialworkspace, magic
bind = $mainMod SHIFT, S, movetoworkspace, special:magic

# Scroll through existing workspaces with mainMod + scroll
bind = $mainMod, mouse_up, workspace, e+1
bind = $mainMod, mouse_down, workspace, e-1

# Go to next/prev workspace
bind = $mainMod, N, workspace, e+1
bind = $mainMod SHIFT, N, workspace, e-1

# Move/resize windows with mainMod + LMB/RMB and dragging
bindm = $mainMod, mouse:272, movewindow
bindm = $mainMod, mouse:273, resizewindow

# Alt tab functionality
bind = ALT,Tab,cyclenext
bind = ALT, Tab, bringactivetotop,
bind = ALT_SHIFT,Tab,cyclenext,prev
bind = ALT_SHIFT, Tab, bringactivetotop,

# Resizing keybinds
# bind = $mainMod, R, mouse:273, resizewindow

# Screenshot binds
$grimblast = $HOME/.local/bin/grimblast
bind = SUPER, p, exec, $grimblast copysave area --notify --freeze
bind = SUPER SHIFT, p, exec, $grimblast copysave output --notify
bind = SUPER CTRL, p, exec, $grimblast copysave screen --notify
bind = SUPER ALT, p, exec, $grimblast copysave active --notify

# Laptop multimedia keys for volume and LCD brightness
bindel = ,XF86AudioRaiseVolume, exec, wpctl set-volume -l 1 @DEFAULT_AUDIO_SINK@ 5%+
bindel = ,XF86AudioLowerVolume, exec, wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%-
bindel = ,XF86AudioMute, exec, wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
bindel = ,XF86AudioMicMute, exec, wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
bindel = ,XF86MonBrightnessUp, exec, brightnessctl -e4 -n2 set 5%+
bindel = ,XF86MonBrightnessDown, exec, brightnessctl -e4 -n2 set 5%-

# Requires playerctl
bindl = , XF86AudioNext, exec, playerctl next
bindl = , XF86AudioPause, exec, playerctl play-pause
bindl = , XF86AudioPlay, exec, playerctl play-pause
bindl = , XF86AudioPrev, exec, playerctl previous

# will switch to a submap called resize
bind = $mainMod, R, submap, resize

# will start a submap called "resize"
submap = resize

# sets repeatable binds for resizing the active window
binde = , L, resizeactive, 10 0
binde = , H, resizeactive, -10 0
binde = , K, resizeactive, 0 -10
binde = , J, resizeactive, 0 10

# use reset to go back to the global submap
bind = , escape, submap, reset

# will reset the submap, which will return to the global submap
submap = reset
